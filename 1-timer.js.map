{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nconst startButton = document.querySelector('[data-start]');\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartButton.addEventListener('click', () => {\n  if (userSelectedDate) {\n    startButton.disabled = true;\n    document.querySelector('#datetime-picker').disabled = true;\n    startTimer(userSelectedDate);\n  }\n});\n\nfunction startTimer(endDate) {\n  const timerInterval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = endDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n      document.querySelector('#datetime-picker').disabled = false;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeLeft);\n      updateTimerDisplay(days, hours, minutes, seconds);\n    }\n  }, 1000);\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}"],"names":["userSelectedDate","startButton","options","selectedDates","iziToast","flatpickr","startTimer","endDate","timerInterval","timeLeft","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,IAAIA,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDH,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAI,EAAU,mBAAoBH,CAAO,EAErCD,EAAY,iBAAiB,QAAS,IAAM,CACtCD,IACFC,EAAY,SAAW,GACvB,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtDK,EAAWN,CAAgB,EAE/B,CAAC,EAED,SAASM,EAAWC,EAAS,CAC3B,MAAMC,EAAgB,YAAY,IAAM,CAEtC,MAAMC,EAAWF,EADL,IAAI,KAGhB,GAAIE,GAAY,EACd,cAAcD,CAAa,EAC3BE,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,SAAS,cAAc,kBAAkB,EAAE,SAAW,OACjD,CACL,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,CACF,EAAE,GAAI,CACT,CAEA,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC/E,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}